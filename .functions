#!/usr/bin/env bash

# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$@"
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
function s() {
	if [ $# -eq 0 ]; then
		subl .;
	else
		subl "$@";
	fi;
}

# Generate self-signed SSL certificate for local development
function self-signed-cert-generator() {

	local subj="/CN=$1"
	local filename="server"

	cp /System/Library/OpenSSL/openssl.cnf temp.cnf

	sed -i '' 's/# req_extensions = v3_req/req_extensions = v3_req/' temp.cnf
	sed -i '' $'s/\[ v3_req \]/[ v3_req ]\\\n\\\nsubjectAltName = @alt_names/' temp.cnf

	ALT_NAMES="\n[alt_names]"
	COUNT=1

	for DOMAIN in "$@"
	do
	    ALT_NAMES="$ALT_NAMES\nDNS.$COUNT = $DOMAIN"
	    COUNT=$(($COUNT + 1))
	done

	printf "$ALT_NAMES" >> temp.cnf

	openssl req \
	    -newkey rsa:2048 \
	    -x509 \
	    -nodes \
	    -keyout $filename.key \
	    -new \
	    -out $filename.crt \
	    -subj "$subj" \
	    -reqexts v3_req \
	    -extensions v3_req \
	    -config temp.cnf \
	    -sha256 \
	    -days 3650

	openssl x509 -in $filename.crt -text

	rm temp.cnf

}

# Search current directory for file
function spot() {
	mdfind -onlyin $(pwd) -name $1
}

# Search current directory for hidden file
function spoth() {
	find $(pwd) -name $1
}

# Renew DHCP lease
function renew_dhcp_lease() {
	local NETWORK_INTERFACE=$(route -n get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}' | tr -d '\n')
	echo "add State:/Network/Interface/$NETWORK_INTERFACE/RefreshConfiguration temporary" | sudo scutil
}

# Add Node and npm via nvm to current shell
function nn {
	export NVM_SYMLINK_CURRENT=true
	export NVM_DIR="$HOME/.nvm"
	source "/usr/local/opt/nvm/nvm.sh"
	node -v
	npm -v
}
